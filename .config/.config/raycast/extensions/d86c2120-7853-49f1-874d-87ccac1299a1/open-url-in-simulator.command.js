"use strict";var m=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var x=Object.prototype.hasOwnProperty;var A=(s,t)=>{for(var o in t)m(s,o,{get:t[o],enumerable:!0})},P=(s,t,o,e)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of b(t))!x.call(s,i)&&i!==o&&m(s,i,{get:()=>t[i],enumerable:!(e=g(t,i))||e.enumerable});return s};var v=s=>P(m({},"__esModule",{value:!0}),s);var I={};A(I,{default:()=>S});module.exports=v(I);var d=require("child_process"),h=require("util"),a=(0,h.promisify)(d.exec);function y(s,t){let o=new Map;for(let e of s){let i=t(e),c=o.get(i);c?c.push(e):o.set(i,[e])}return Array.from(o.keys()).map(e=>({key:e,values:o.get(e)??[]}))}var w=require("@raycast/api"),l=class{static get bundleIdentifier(){return"com.apple.dt.Xcode"}static get downloadUrl(){return"https://apps.apple.com/app/id497799835"}static get developerDocumentationURLScheme(){return"x-xcode-documentation://"}static async isXcodeInstalled(){return!!(await(0,w.getApplications)()).find(o=>o.bundleId===l.bundleIdentifier)}static async isXcodeRunning(){try{return(await a("pgrep Xcode")).stdout.trim().length!==0}catch{return!1}}static launchXcode(){return a([`open -j -b ${l.bundleIdentifier}`,"sleep 2"].join(" && ")).then()}};var u=class extends Error{constructor(o){super(o);this.reason=o}};var n=class{static launchSimulatorApplication(){return a('open -b "com.apple.iphonesimulator"').then()}static async xcodeSimulatorGroups(t){let o=await n.xcodeSimulators();return y(o.filter(e=>t==="All"||e.state===t),e=>e.runtime).map(e=>({runtime:e.key,simulators:e.values})).sort((e,i)=>e.runtime.localeCompare(i.runtime))}static async xcodeSimulators(){let t=await a("xcrun simctl list -j -v devices"),o=JSON.parse(t.stdout);if(!o||!o.devices)throw[];let e=[];for(let i in o.devices){let c=i.substring(i.lastIndexOf(".")+1).split("-"),f=[c.shift(),c.join(".")].join(" ");e.push(...o.devices[i].map(p=>(p.runtime=f,p)))}return e}static boot(t){return a(`xcrun simctl boot ${t.udid}`).then(()=>{n.launchSimulatorApplication()})}static shutdown(t){return a(`xcrun simctl shutdown ${t.udid}`).then()}static toggle(t){switch(t.state){case"Booted":return n.shutdown(t);case"Shutting Down":return Promise.resolve();case"Shutdown":return n.boot(t)}}static async app(t,o,e){try{await n.boot(e)}catch{}return a(["xcrun","simctl",t,e.udid,o].join(" ")).then()}static async appPrivacy(t,o,e,i){try{await n.boot(i)}catch{}return a(["xcrun","simctl","privacy",i.udid,t,o,e].join(" ")).then()}static isValidUrl(t){return/\w+:\/\/+/.test(t)}static async openUrl(t,o){let e=t.trim();if(!n.isValidUrl(e))throw new u("Bad Url");if(!o){if(!await l.isXcodeInstalled())throw new u("Xcode is not installed");if(!(await n.xcodeSimulators()).some(c=>c.state==="Booted"))throw new u("No simulator booted")}return a(["xcrun","simctl","openurl",o?.udid??"booted",e].join(" ")).then(()=>{n.launchSimulatorApplication()})}};var r=require("@raycast/api");var S=async s=>{let t=await(0,r.showToast)({style:r.Toast.Style.Animated,title:"Opening URL in Simulator"});try{await n.openUrl(s.arguments.url),await(0,r.closeMainWindow)()}catch(o){if(o instanceof u)switch(o.reason){case"Bad Url":t.style=r.Toast.Style.Failure,t.title="Please enter a valid url";break;case"No simulator booted":t.style=r.Toast.Style.Failure,t.title="No simulator is booted, please boot a simulator to open a url.",t.primaryAction={title:"Manage Simulators",onAction:async e=>{await(0,r.launchCommand)({name:"manage-simulators.command",type:r.LaunchType.UserInitiated}),await e.hide()}};break;case"Xcode is not installed":await t.hide(),await(0,r.launchCommand)({name:"manage-simulators.command",type:r.LaunchType.UserInitiated});break}else t.style=r.Toast.Style.Failure,t.title="An error occurred while trying to open the url",t.message=`${o}`}};
